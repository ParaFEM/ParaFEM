#summary Special information for HECToR users.
#sidebar TOC

= Introduction =

[http://www.hector.ac.uk HECToR] is the UK's National HPC Service. This page contains some pointers for ParaFEM users who wish to run the code on HECToR.

= Getting an Account =

To apply for an account, please see the following [http://www.hector.ac.uk/howcan/admin/ webpage].

= Common Commands =

 * Login: {{{ssh <username>@phase2b.hector.ac.uk}}}
 * Change password: {{{passwd}}}

= Submitting Jobs to the Batch Queue =

 * Locate the batch script called _run.xt4_ in _~/parafem/etc/batchscripts_. Modify the items in brackets.
 * {{{<arguments>}}} refers to the job_name. If the job_name is _p121_ then replace {{{<arguments>}}} with _p121_. Program _p121_ will then expect to find the input files _p121.dat, p121.bnd, p121.d_ and _p121.lds_. Note that the job_name is user defined. 
 * Copy the executable program (eg _p121_), the input files (_p121.dat, p121.bnd, p121.d_ and _p121.lds_) and the batchscript (_run.xt4_) to the _/work/projectID/projectID/userID_ directory.
 * Change directory to _/work/projectID/projectID/userID_
 * To submit the job, type _$qsub run.xt4_
 * To check the status of the job in the queue, type _$qstat_
 * For further information about the batch queues and batch scripts, consult the user documentation on the HECToR webpages. 

= Known Issues on HECToR Phase2b =

== Segmentation fault in {{{prog83}}} using the PGI compiler ==

 * A segmentation fault occurs at run time in program {{{prog83}}} when built using the PGI compiler. The cause of this bug has not been identified.
 * A workaround is to use the Pathscale compiler. To do this, type the sequence of commands below:
  * module unload !PrgEnv-pgi
  * module load !PrgEnv-pathscale
  * make-parafem MACHINE=xe6-pathscale

== Scatter Error ==

If the job fails and you get output similar to the below, you need to reserve one core on each node of HECToR for the operating system. This is done by adding the {{{-r 1}}} switch to the {{{aprun}}} command:

{{{
aprun -n 1472 -N 23 -r 1 ./p121 <job_name>
}}}

Note that in the batch submission script (see {{{/parafem/etc/batchscripts/job.xe6}}}), you need to request the total number of cores and cores per node. For this example we need to set {{{mppwidth=1536}}} and {{{mppnpp=24}}}. There are 64 nodes requested, each with 24 cores, giving a total of 64 x 24 = 1536 cores. 

1536 total - 1472 for the program = 64 reserved for the operating system, i.e. one core for each node.

{{{
 PE:             1  Scatter error: recbufsize:             9 
  /= lenput(pe_number):             0
 PE:             4  Scatter error: recbufsize:        -32766 
  /= lenput(pe_number):             0
 PE:             7  Scatter error: recbufsize:        -32766 
  /= lenput(pe_number):             0
 PE:             5  Scatter error: recbufsize:        -32766 
 PE:             6  Scatter error: recbufsize:        -32766 
FORTRAN STOP
FORTRAN STOP
FORTRAN STOP
  /= lenput(pe_number):             0
  pe_number:             2  i:             1
  /= lenput(pe_number):             0
  pe_number:             4  i:             1
 source:             1  tag:             2
  pe_number:             3  i:             1
 Temp probe. recbufsize:             0  source:             0  tag:  
 source:             3  tag:             4
 source:             2  tag:             3
 Temp probe. recbufsize:             0  source:             0  tag:  
            0
            0
 Temp probe. recbufsize:             0  source:             0  tag:  
            0
FORTRAN STOP
FORTRAN STOP
FORTRAN STOP
}}}

== Job Never Finishes ==

This is called _deadlock_ in parallel programming terminology. This sometimes occurs on HECToR when using ParaFEM. This problem is fixed by reserving one core per node as in the Scatter example above.
 