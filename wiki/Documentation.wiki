#summary Where to find documentation.
#sidebar TOC

<wiki:toc max_depth="2" />

== ParaFEM API ==
A program called AUTODOC is used to automatically generate a detailed API from headers placed in the source code. Currently a pre-generated API can be found in ~/parafem/docs. For simplicity, the revision number in the document "ParaFEM API 14.0" matches the svn version of the source code from which the documentation was created. Simply open in a web browser.

== ParaFEM Input Decks ==
The ParaFEM programs currently require input decks to be provided in a bespoke human readable [Input ASCII format]. In the future, support will be provided for other common formats.

== The Book ==
Where possible, the variable names match those used in Smith I.M. and Griffiths D.V. "Programming the Finite Element Method", 4th Edition, Wiley, 2004. This means that those serious about using ParaFEM can purchase a very useful introductory text.

== Translation ==
The following Google Gadget can be used to help translate the documentation to your local language:

<wiki:gadget url="http://www.gmodules.com/ig/ifr?url=http://lovemygadget.com/language/language_translation2.xml&amp;synd=open&amp;w=320&amp;h=200&amp;title=Babelfish+Translation&amp;lang=all&amp;country=ALL&amp;border=%23ffffff%7C3px%2C1px+solid+%23999999&amp;output=js" />

== FAQ ==

_Q: What method of domain decomposition is used?_

The current version of ParaFEM does not use domain decomposition techniques. It uses standard element-by-element iterative solvers (pcg, bicgstab, lanczos) which operate in essentially the same way in serial and parallel. The subdivision of elements and equations across processors (the partitioning strategy) is very naive. For a problem with 20 elements on two processors, elements 1-10 are sent to processor 1 and elements 11-20 to processor 2. For partitioning, no account is taken regarding how these elements are connected. See documentation for subroutines CALC_NELS_PP and CALC_NEQ_PP. That's the partitioner!

For most models, there is little benefit in using a graph-based partitioning strategy. The explanation is in the way interprocessor communications are handled in ParaFEM. If these were written differently, graph-based partitioning might be beneficial. 

If you wanted to test this (or if you have a pathological case), you could preprocess the model using a tool such as METIS, renumbering the mesh so that domain 1 contains elements 1-10 and domain 2 contains elements 11-20. We've done this at Manchester, which is why we know it does not provide much benefit. Please contact the project owner if you require help. It would be useful to provide a ParaFEM tool that can be downloaded to do this.  