#summary How to download and install ParaFEM and ParaFEM-Viewer.
#sidebar TOC

<wiki:toc max_depth="2" />

= ParaFEM =
== Checkout the latest version of source code ==
 * ParaFEM uses the _subversion_ version control system (svn). Follow the instructions under the [http://code.google.com/p/parafem/source/checkout Source] tab. 
 * You may also need to see how to use {{{svn}}} on your local supercomputer or cluster. 
 * On HECToR (UK National HPC Facility), svn needs to be loaded. To do this type _{{{module load svn}}}_ at the command prompt.
 * To update an existing installation, use the command {{{svn update}}} instead of {{{svn checkout}}}

== Download a Linux release version ==
 * Under the [http://code.google.com/p/parafem/downloads/list Download] tab, click to download the latest source code archive {{{ParaFEM_r40.tar.gz}}}.
 * Select a directory in which to install ParaFEM.
 * Unzip the archive by typing {{{gunzip ParaFEM_r40.tar.gz}}} 
 * Untar the archive by typing {{{tar xvf ParaFEM_r40.tar}}}
 * You should now see all the source code expanded in your chosen directory.

== Building the ParaFEM Library ==
 * In {{{~/parafem/src/modules}}} create a makefile for your system or use an existing one.
 * Type: {{{make -f makemodules.xt}}} (for a Cray XT4 or XT6 system)
 * Type: {{{make -f makemodules.xt install}}} (moves the .mod files to ~/parafem/include and the .a file to ~/parafem/lib)

== Rebuilding the ParaFEM Library After an Update ==
 * Change directory to {{{~/parafem/src/modules}}} and select the library you wish to build.
 * Type: {{{make -f makempi.xt clean}}} (removes old files)
 * Type: {{{make -f makempi.xt}}} (builds new library)
 * Type: {{{make -f makempi.xt install}}} (installs new library)

== Building a ParaFEM Program == 
 * If you wish to use an existing program, change to the appropriate directory and build it. For example:
 * Change directory to {{{~/parafem/src/programs/4th_ed/p121}}}
 * Type: {{{make -f makeprograms}}}
 * *Note* If rebuilding after an update to the source code, first clean the build by typing: {{{make -f makeprograms clean}}}
 * Example input decks can be found in the {{{~/parafem/examples/p121}}} directory

= ParaFEM-Viewer = 
== Checkout the latest version of source code ==
The ParaFEM-Viewer source code will be made available shortly.
== Installing the ParaFEM-Viewer Runtime ==
=== Windows ===
  * Create a new folder in {{{C:\Program Files}}} called {{{ParaFEM-Viewer}}}
  * Unpack the archive using your favourite zip tool into the folder named {{{ParaFEM-Viewer}}}
  * Launch {{{ParaFEM-Viewer}}} by either:
    * Double clicking on the {{{fear.bat}}} file in the {{{ParaFEM-Viewer}}} folder or
    * By creating a shortcut on your desktop and double clicking on the shortcut
If the application fails to start:
  * *Please note {{{ParaFEM-Viewer}}} requires an AVS license*
    * A runtime only license will suffice for the runtime executable
    * The AVS/Express software and an accompanying Visualization or Developers license will be required for compiling and executing the source code.
  * You may need to install the appropriate Microsoft Visual Studio Redistributable package
    * [http://www.microsoft.com/downloads/details.aspx?familyid=200B2FD9-AE1A-4A14-984D-389C36F85647 Microsoft Visual C++ 2005 SP1 Redistributable Package (x86)]
    * [http://www.microsoft.com/downloads/details.aspx?familyid=eb4ebe2d-33c0-4a47-9dd4-b9a6d7bd44da Microsoft Visual C++ 2005 SP1 Redistributable Package (x86_64)]
=== Linux/UNIX ===
  * Choose where you want to install {{{ParaFEM-Viewer}}} and create a directory called {{{ParaFEM-Viewer}}}
    * {{{mkdir ParaFEM-Viewer}}} 
  * Unpack the archive
    * {{{cd ParaFEM-Viewer}}}
    * {{{tar zxvf fearxp-linux_64-0.1.tgz}}} 
  * Launch ParaFEM-Viewer
    * {{{./fearxp}}}

If the application fails to start:
  * *Please note ParaFEM-Viewer requires an AVS license*
    * A runtime only license will suffice for the runtime executable
    * The AVS/Express software and an accompanying Visualization or Developers license will be required for compiling and executing the source code.